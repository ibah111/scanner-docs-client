variables:
  ADDITIONAL_CA_CERT_BUNDLE: |
    -----BEGIN CERTIFICATE-----
    MIIDTzCCAjegAwIBAgIQXUIJCZlo/L9DS+HyRXaM9zANBgkqhkiG9w0BAQsFADA6
    MRIwEAYKCZImiZPyLGQBGRYCUlUxEzARBgoJkiaJk/IsZAEZFgNVU0IxDzANBgNV
    BAMTBlVTQi1DQTAeFw0yMTEwMjkxMjU4NDdaFw0yNjEwMjkxMzA4NDZaMDoxEjAQ
    BgoJkiaJk/IsZAEZFgJSVTETMBEGCgmSJomT8ixkARkWA1VTQjEPMA0GA1UEAxMG
    VVNCLUNBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvtylx7hlf9KL
    0JaURtOr1l8s9IC16yiv0Ak6vACJfhL8RthkVIhL1QXGcTgJ2d39oPEXHHb5g9fT
    H2FB2ang9+6JuUP40pArzLWQxifprZ/6ty5f35x8Ve0YPgDOPGIuAlU440v6F1BA
    ImZRzY/I2B6yau1pF4MRIoi9wqW6mJglycnw71hXYzJnyU8QroamrTCi7CoqT+pD
    IIXWQX4YtRoHHKEMsfaN8SY5L9JryCtlm5xXWbDx7FPsP80J43Ov93qxFcSBIpwE
    +o09+QCOrZAGI4vfQJAUzUj+Uq9zQEK/pi9fUiejJguCQTE5sw4NWmE9pj7iMZQ/
    9uw32350mQIDAQABo1EwTzALBgNVHQ8EBAMCAYYwDwYDVR0TAQH/BAUwAwEB/zAd
    BgNVHQ4EFgQUPzEZJXrAKJeIqnxqryz3POCPCEYwEAYJKwYBBAGCNxUBBAMCAQAw
    DQYJKoZIhvcNAQELBQADggEBAJI19mzZu6ovqrwLlYiyzbK5Pkv6qSeHbRUY/j8f
    NnzUldZG2QMMoPSih2MT5iNN1svxEXVYTlcLm38r1ZI7R54Uc9wA8qX/MkGZB+76
    dSyX9Rrz9eJSr3CcL1Tbm6AH1u33PdU+WtyEsTDxSWJ+MLk7v1gd0lsiXFg/s7Wr
    rdj/ogD8RHnrFtTyugiC4DXO9UmpdY78lfCGSS/iZz/uXu7IydCSQfV0L765qdR0
    6LwI49yALti54xK0QNjTBtcpq5i2n9CdrMnoXjuSqSpONoMrCYtJZGA8MvTMxgrd
    GQImPcyZJGUuEEJtYKEWAabYtJ5fDBGTJQ4i9SJPe7A794E=
    -----END CERTIFICATE-----
stages:
  - test
  - build
  - deploy
test_job:
  stage: test
  image: node:lts
  before_script:
    - apt-get update -qq && apt-get install -y -qq wget
    - dpkg --add-architecture i386
    - mkdir -pm755 /etc/apt/keyrings
    - wget -O /etc/apt/keyrings/winehq-archive.key https://dl.winehq.org/wine-builds/winehq.key
    - wget -NP /etc/apt/sources.list.d/ https://dl.winehq.org/wine-builds/debian/dists/bullseye/winehq-bullseye.sources
    - apt-get update -qq && apt-get install --install-recommends -qq winehq-stable
    - node -v
    - corepack enable
    - yarn set version berry
    - yarn config set compressionLevel mixed
    - yarn config set -H enableImmutableInstalls false
    - yarn config set nodeLinker node-modules
    - yarn config set enableStrictSsl false
    - yarn config set enableGlobalCache false
    - yarn config set "npmRegistries[\"//${CI_SERVER_HOST}/api/v4/packages/npm/\"].npmAlwaysAuth" true
    - yarn config set "npmRegistries[\"//${CI_SERVER_HOST}/api/v4/packages/npm/\"].npmAuthToken" "${CI_JOB_TOKEN}"
    - yarn config set npmScopes.contact.npmRegistryServer "https://${CI_SERVER_HOST}/api/v4/packages/npm/"
    - yarn config set npmScopes.motivation.npmRegistryServer "https://${CI_SERVER_HOST}/api/v4/packages/npm/"
    - yarn config set npmScopes.tools.npmRegistryServer "https://${CI_SERVER_HOST}/api/v4/packages/npm/"
  script:
    - cat .yarnrc.yml
    - yarn
    - yarn build
  rules:
    - if: '$CI_COMMIT_TAG == null'
  artifacts:
    paths:
      - dist/latest.yml
      - dist/*.exe
      - dist/*.exe.blockmap
    expire_in: 1 day
  cache:
    paths:
      - .yarn
      - node_modules
build_job:
  stage: build
  image: node:lts
  before_script:
    - apt-get update -qq && apt-get install -y -qq wget
    - dpkg --add-architecture i386
    - mkdir -pm755 /etc/apt/keyrings
    - wget -O /etc/apt/keyrings/winehq-archive.key https://dl.winehq.org/wine-builds/winehq.key
    - wget -NP /etc/apt/sources.list.d/ https://dl.winehq.org/wine-builds/debian/dists/bullseye/winehq-bullseye.sources
    - apt-get update -qq && apt-get install --install-recommends -qq winehq-stable
    - yarn set version berry
    - yarn config set nodeLinker node-modules
    - yarn config set enableStrictSsl false
    - yarn config set "npmRegistries[\"//${CI_SERVER_HOST}/api/v4/packages/npm/\"].npmAlwaysAuth" true
    - yarn config set "npmRegistries[\"//${CI_SERVER_HOST}/api/v4/packages/npm/\"].npmAuthToken" "${CI_JOB_TOKEN}"
    - yarn config set npmScopes.contact.npmRegistryServer "https://${CI_SERVER_HOST}/api/v4/packages/npm/"
    - yarn config set npmScopes.motivation.npmRegistryServer "https://${CI_SERVER_HOST}/api/v4/packages/npm/"
    - npm version --no-git-tag-version ${CI_COMMIT_TAG}
  script:
    - yarn
    - yarn build
  artifacts:
    paths:
      - dist/latest.yml
      - dist/*.exe
      - dist/*.exe.blockmap
    expire_in: never
  only:
    - tags
  cache:
    paths:
      - .yarn
      - node_modules
deploy_job:
  stage: deploy
  before_script:
    - apt-get update -qq && apt-get install -y -qq sshpass
  script:
    - export SSHPASS=$HOST_PASSWORD
    - sshpass -e scp -o stricthostkeychecking=no -r dist/* $HOST_USER@$HOST_NAME:$PATH_UPLOAD
  only:
    - tags
